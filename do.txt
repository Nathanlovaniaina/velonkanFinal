<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entreprises</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            padding: 20px;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }
        .header {
            text-align: center;
            margin-bottom: 40px;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        .header p {
            font-size: 1.1rem;
            color: #666;
        }
        .tabs {
            display: flex;
            margin-bottom: 30px;
            background: #f8f9fa;
            border-radius: 15px;
            padding: 5px;
        }
        .tab-button {
            flex: 1;
            padding: 15px 20px;
            border: none;
            background: transparent;
            cursor: pointer;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            color: #666;
        }
        .tab-button.active {
            color: white;
            transform: translateY(-2px);
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .form-group {
            margin-bottom: 25px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        .form-control {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
        }
        .form-control:focus {
            outline: none;
            transform: translateY(-2px);
        }
        .form-control:invalid {
            border-color: #ff4d4f;
        }
        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .btn-primary {
            color: white;
        }
        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }
        .btn-secondary {
            color: #333;
        }
        .btn-danger {
            color: white;
        }
        .quartier-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        .quartier-item {
            padding: 15px;
            color: rgb(20, 5, 5);
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-weight: 600;
        }
        .quartier-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(147, 251, 178, 0.4);
        }
        .quartier-item.selected {
            transform: scale(1.05);
        }
        #map {
            width: 100%;
            height: 400px;
            border-radius: 15px;
            margin: 20px 0;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        .entreprise-list {
            display: grid;
            gap: 20px;
        }
        .entreprise-card {
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .entreprise-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }
        .entreprise-name {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }
        .entreprise-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }
        .info-item {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .info-icon {
            width: 20px;
            height: 20px;
            fill: #667eea;
        }
        .entreprise-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .btn-sm {
            padding: 8px 16px;
            font-size: 0.9rem;
        }
        .success-message, .error-message {
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            text-align: center;
            font-weight: 600;
        }
        .success-message {
            color: white;
        }
        .error-message {
            color: white;
        }
        .coordinates-display {
            background: rgba(102, 126, 234, 0.1);
            padding: 15px;
            border-radius: 10px;
            margin-top: 10px;
            font-family: monospace;
        }
        @media (max-width: 768px) {
            .container {
                padding: 20px;
                margin: 10px;
            }
            .header h1 {
                font-size: 2rem;
            }
            .tabs {
                flex-direction: column;
            }
            .entreprise-info {
                grid-template-columns: 1fr;
            }
            .entreprise-actions {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Entreprises</h1>
            <p>Antananarivo - Madagascar</p>
        </div>
        <c:if test="${not empty message}">
            <div class="${message.contains('Erreur') ? 'error-message' : 'success-message'}">${message}</div>
        </c:if>
        <div class="tabs">
            <button class="tab-button <c:if test='${param.tab != \"list\"}'>active</c:if>" onclick="showTab('create')">Créer Entreprise</button>
            <button class="tab-button <c:if test='${param.tab == \"list\"}'>active</c:if>" onclick="showTab('list')">Liste des Entreprises</button>
        </div>

        <!-- Onglet Création -->
        <div id="create-tab" class="tab-content <c:if test='${param.tab != \"list\"}'>active</c:if>">
            <form id="entreprise-form" action="${pageContext.request.contextPath}/entreprise/save" method="post">
                <input type="hidden" name="id" value="${entreprise.id}"/>
                <div class="form-group">
                    <label for="nom">Nom de l'entreprise *</label>
                    <input type="text" id="nom" name="nom" class="form-control" required value="${entreprise.nom}" placeholder="Entrez le nom de l'entreprise">
                </div>
                <div class="form-group">
                    <label>Selectionnez un quartier d'Antananarivo</label>
                    <div class="quartier-grid" id="quartier-grid"></div>
                </div>
                <div class="form-group">
                    <label for="adresse">Adresse exacte </label>
                    <input type="text" id="adresse" name="adresse" class="form-control" required value="${entreprise.adresse}" placeholder="Entrez l'adresse exacte">
                </div>
                <div class="form-group">
                    <label>Localisation sur la carte (Vue Satellite)</label>
                    <div id="map"></div>
                    <div class="coordinates-display">
                        <strong>Coordonnées sélectionnées :</strong><br>
                        Latitude: <input type="number" step="any" id="latitude" name="latitude" class="form-control" value="${entreprise.latitude != null ? entreprise.latitude : ''}" placeholder="Entrez la latitude">
                        Longitude: <input type="number" step="any" id="longitude" name="longitude" class="form-control" value="${entreprise.longitude != null ? entreprise.longitude : ''}" placeholder="Entrez la longitude">
                    </div>
                </div>
                <div class="form-group">
                    <label for="debut_contrat">Date de début du contrat</label>
                    <input type="date" id="debut_contrat" name="debutDateContrat" class="form-control" value="<fmt:formatDate value='${entreprise.debutDateContrat}' pattern='yyyy-MM-dd'/>">
                </div>
                <button type="submit" class="btn btn-primary">Enregistrer l'entreprise</button>
            </form>
        </div>

        <!-- Onglet Liste -->
        <div id="list-tab" class="tab-content <c:if test='${param.tab == \"list\"}'>active</c:if>">
            <div class="entreprise-list">
                <c:choose>
                    <c:when test="${empty entreprises}">
                        <div style="text-align: center; padding: 50px; color: #666;">
                            <h3>Aucune entreprise enregistrée</h3>
                        </div>
                    </c:when>
                    <c:otherwise>
                        <c:forEach var="entreprise" items="${entreprises}">
                            <div class="entreprise-card">
                                <div class="entreprise-name">${entreprise.nom}</div>
                                <div class="entreprise-info">
                                    <div class="info-item">
                                        <svg class="info-icon" viewBox="0 0 24 24">
                                            <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                                        </svg>
                                        <span><strong>Adresse:</strong> ${entreprise.adresse}</span>
                                    </div>
                                    <div class="info-item">
                                        <svg class="info-icon" viewBox="0 0 24 24">
                                            <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
                                        </svg>
                                        <span><strong>Coordonnées:</strong> ${entreprise.latitude != null ? entreprise.latitude : 'Non défini'}, ${entreprise.longitude != null ? entreprise.longitude : 'Non défini'}</span>
                                    </div>
                                    <div class="info-item">
                                        <svg class="info-icon" viewBox="0 0 24 24">
                                            <path d="M9 11H7v6h2v-6zm4 0h-2v6h2v-6zm4 0h-2v6h2v-6zm2-7h-2V2h-2v2H9V2H7v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zM19 21H5V10h14v11z"/>
                                        </svg>
                                    </div>
                                </div>
                                <div class="entreprise-actions">
                                    <button class="btn btn-secondary btn-sm" onclick="viewOnMap(${entreprise.latitude != null ? entreprise.latitude : -18.8792}, ${entreprise.longitude != null ? entreprise.longitude : 47.5079})">Voir sur la carte</button>
                                    <a href="${pageContext.request.contextPath}/entreprise/edit/${entreprise.id}" class="btn btn-primary btn-sm">✏️ Modifier</a>
                                    <a href="${pageContext.request.contextPath}/entreprise/delete/${entreprise.id}" class="btn btn-danger btn-sm" onclick="return confirm('Êtes-vous sûr de vouloir supprimer cette entreprise ?')"> Supprimer</a>
                                </div>
                            </div>
                        </c:forEach>
                    </c:otherwise>
                </c:choose>
            </div>
        </div>
    </div>

    <script>
        const quartiers = [
            { nom: "Analakely", lat: -18.9087, lng: 47.5204 },
            { nom: "Antaninarenina", lat: -18.9143, lng: 47.5217 },
            { nom: "Tsaralalana", lat: -18.9089, lng: 47.5198 },
            { nom: "Ambohijatovo", lat: -18.9234, lng: 47.5289 },
            { nom: "Faravohitra", lat: -18.9012, lng: 47.5234 },
            { nom: "Ambohimiandra", lat: -18.8756, lng: 47.5123 },
            { nom: "Andavamamba", lat: -18.9167, lng: 47.5345 },
            { nom: "Ambodivona", lat: -18.8934, lng: 47.5456 },
            { nom: "Ambohipo", lat: -18.8823, lng: 47.5167 },
            { nom: "Ankazobe", lat: -18.9456, lng: 47.5678 },
            { nom: "Antanimena", lat: -18.9234, lng: 47.5123 },
            { nom: "Isotry", lat: -18.9345, lng: 47.5234 },
            { nom: "67Ha", lat: -18.9135, lng: 47.5450 },
            { nom: "Ankorondrano", lat: -18.8765, lng: 47.5267 },
            { nom: "Ivandry", lat: -18.8667, lng: 47.5312 },
            { nom: "Ambatobe", lat: -18.8652, lng: 47.5432 },
            { nom: "Andohalo", lat: -18.9108, lng: 47.5215 },
            { nom: "Ankatso", lat: -18.8990, lng: 47.5280 },
            { nom: "Ampasamadinika", lat: -18.9250, lng: 47.5317 },
            { nom: "Mahamasina", lat: -18.9225, lng: 47.5165 },
            { nom: "Anosy", lat: -18.9201, lng: 47.5164 },
            { nom: "Soarano", lat: -18.9051, lng: 47.5169 },
            { nom: "Ambanidia", lat: -18.9074, lng: 47.5304 },
            { nom: "Anosibe", lat: -18.9267, lng: 47.5220 },
            { nom: "Ampefiloha", lat: -18.9149, lng: 47.5275 },
            { nom: "Ankazomanga", lat: -18.8995, lng: 47.5500 },
            { nom: "Anosivavaka", lat: -18.9333, lng: 47.5333 },
            { nom: "Sabotsy Namehana", lat: -18.8350, lng: 47.5700 },
            { nom: "Ilafy", lat: -18.8567, lng: 47.5623 },
            { nom: "Mahazo", lat: -18.8789, lng: 47.5670 },
            { nom: "Ambohimangakely", lat: -18.8700, lng: 47.6000 },
            { nom: "Andraharo", lat: -18.8892, lng: 47.5255 },
            { nom: "Antohomadinika", lat: -18.9141, lng: 47.5281 },
            { nom: "Anjanahary", lat: -18.8993, lng: 47.5078 },
            { nom: "Ampandrana", lat: -18.9100, lng: 47.5270 },
            { nom: "Ambatoroka", lat: -18.8842, lng: 47.5308 },
            { nom: "Ankadifotsy", lat: -18.9083, lng: 47.5282 },
            { nom: "Ankadikely", lat: -18.8362, lng: 47.5791 },
            { nom: "Anjanamasina", lat: -18.8760, lng: 47.5425 },
            { nom: "Anosizato", lat: -18.9269, lng: 47.5001 },
            { nom: "Antsobolo", lat: -18.9110, lng: 47.5225 },
            { nom: "Ampitatafika", lat: -18.9543, lng: 47.4682 },
            { nom: "Manjakaray", lat: -18.8828, lng: 47.5281 },
            { nom: "Ambohitrimanjaka", lat: -18.8581, lng: 47.4453 },
            { nom: "Tanjombato", lat: -18.9547, lng: 47.5132 },
            { nom: "Ankadindramamy", lat: -18.8642, lng: 47.5365 },
            { nom: "Amboditsiry", lat: -18.8912, lng: 47.5334 },
            { nom: "Ambolokandrina", lat: -18.9184, lng: 47.5290 },
            { nom: "Ankerana", lat: -18.8785, lng: 47.5702 },
            { nom: "Fidasiana", lat: -18.9102, lng: 47.5338 }
        ];

        let map;
        let marker;

        function initMap(lat = -18.8792, lng = 47.5079, zoom = 12) {
            map = L.map('map').setView([lat, lng], zoom);
            L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
                attribution: 'Tiles © Esri — Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
                maxZoom: 18
            }).addTo(map);

            map.on('click', function(e) {
                placeMarker(e.latlng);
            });

            const latInput = document.getElementById('latitude').value;
            const lngInput = document.getElementById('longitude').value;
            if (latInput && lngInput && !isNaN(latInput) && !isNaN(lngInput)) {
                placeMarker({ lat: parseFloat(latInput), lng: parseFloat(lngInput) });
                map.setView([parseFloat(latInput), parseFloat(lngInput)], 16);
            }
        }

        function placeMarker(latlng) {
            if (marker) {
                marker.remove();
            }
            marker = L.marker(latlng).addTo(map);
            document.getElementById('latitude').value = latlng.lat.toFixed(2);
            document.getElementById('longitude').value = latlng.lng.toFixed(2);
        }

        function viewOnMap(lat, lng) {
            showTab('create');
            setTimeout(() => {
                map.setView([lat, lng], 16);
                placeMarker({ lat, lng });
            }, 500);
        }

        function generateQuartiers() {
            const grid = document.getElementById('quartier-grid');
            grid.innerHTML = '';
            quartiers.forEach(quartier => {
                const item = document.createElement('div');
                item.className = 'quartier-item';
                item.textContent = quartier.nom;
                item.onclick = () => selectQuartier(quartier, item);
                grid.appendChild(item);
            });
        }

        function selectQuartier(quartier, element) {
            document.querySelectorAll('.quartier-item').forEach(item => item.classList.remove('selected'));
            element.classList.add('selected');
            document.getElementById('latitude').value = quartier.lat.toFixed(2);
            document.getElementById('longitude').value = quartier.lng.toFixed(2);
            map.setView([quartier.lat, quartier.lng], 16);
            placeMarker({ lat: quartier.lat, lng: quartier.lng });
        }

        function showTab(tabName) {
            document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            document.getElementById(tabName + '-tab').classList.add('active');
            document.querySelector(`.tab-button[onclick="showTab('${tabName}')"]`).classList.add('active');
            if (tabName === 'create') {
                setTimeout(() => map.invalidateSize(), 100);
            }
        }

        function validateForm() {
            const nom = document.getElementById('nom').value;
            const adresse = document.getElementById('adresse').value;
            const latitude = document.getElementById('latitude').value;
            const longitude = document.getElementById('longitude').value;
            const debutContrat = document.getElementById('debut_contrat').value;

            let errorMessage = '';

            if (!nom || nom.trim() === '') {
                errorMessage += 'Le nom de l\'entreprise est requis. ';
            }

            if (!adresse || adresse.trim() === '') {
                errorMessage += 'L\'adresse est requise. ';
            }

            // Allow latitude and longitude to be optional
            if (latitude && (isNaN(latitude) || latitude === '')) {
                errorMessage += 'La latitude doit être un nombre valide. ';
            } else if (latitude && (parseFloat(latitude) < -90 || parseFloat(latitude) > 90)) {
                errorMessage += 'La latitude doit être entre -90 et 90. ';
            }

            if (longitude && (isNaN(longitude) || longitude === '')) {
                errorMessage += 'La longitude doit être un nombre valide. ';
            } else if (longitude && (parseFloat(longitude) < -180 || parseFloat(longitude) > 180)) {
                errorMessage += 'La longitude doit être entre -180 et 180. ';
            }

            if (debutContrat && !/^\d{4}-\d{2}-\d{2}$/.test(debutContrat)) {
                errorMessage += 'La date de début du contrat doit être au format AAAA-MM-JJ. ';
            }

            if (errorMessage) {
                alert(errorMessage);
                return false;
            }
            if (!latitude || latitude === '') {
    errorMessage += 'La latitude est requise. ';
}
if (!longitude || longitude === '') {
    errorMessage += 'La longitude est requise. ';
}

            return true;
        }

        document.addEventListener('DOMContentLoaded', () => {
            generateQuartiers();
            initMap();
            document.getElementById('entreprise-form').addEventListener('submit', (e) => {
                if (!validateForm()) {
                    e.preventDefault();
                }
            });
        });
    </script>
</body>
</html>